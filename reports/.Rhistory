a <- 2
a
a  <- data.frame()
a
<-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-
library(ggplo2)
library(ggplot2)
install.package("ggplot2")
install.packages("ggplot2")
?rbinom
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.6)
rbinom(10, 1, 0.9)
rbinom(10, 2, 0.9)
rbinom(10, 2, 0.5)
unlist
?unlist
?apply
?combn
combn([1,2,3], 2)
combn((1,2,3), 2)
combn((1,2,3))
combn(c(1,2,3), 2)
category <- read.table("../closest_neighbors/evaluation_category.result")
setwd("/home/slin/Thesis/data/TREC2005/reports/")
category <- read.table("../closest_neighbors/evaluation_category.result")
colnames(category) <- c("matrixType", "distFunc", "filename", "nsv", "precision")
relevance<- read.table("../closest_neighbors/evaluation_relevance.result")
colnames(relevance) <- c("matrixType", "distFunc", "filename", "nsv", "precision")
all <- rbind(
mutate(category, evaluation="category"),
mutate(relevance, evaluation="category and relevance")
)
library(ggplot2)
library(plyr) # mutate(), mapvalues()
library(knitr) # kable()
all <- rbind(
mutate(category, evaluation="category"),
mutate(relevance, evaluation="category and relevance")
)
all$evaluation <- as.factor(all$evaluation)
str(all)
all$evaluation <- as.factor(all$evaluation)
all$matrixType <- mapvalues(all$matrixType, from = c("tf_idf", "term_freq", "term_freq_binary"), to = c("TF-IDF", "term frequency", "binary term frequency"))
maxima <- aggregate(precision ~ evaluation + matrixType + distFunc, max, data=all)  # see maximum of all combinations
maxima <- merge(maxima, all[, c("precision", "nsv")], by="precision") # bring in the number of nsv
maxima <- arrange(maxima, evaluation, matrixType) # arrange the dataframe
kable(maxima, format="markdown") # Ensure Github can render the table
